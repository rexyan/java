<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:content="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置 userService -->
    <bean id="userService" class="me.yanrs.service.UserServiceImpl"></bean>

    <!-- 配置 切面对象 -->
    <bean id="myAspect" class="me.yanrs.aspect.MyAspect"></bean>

    <!-- 配置 aop -->
    <aop:config proxy-target-class="true">
        <!-- aop指定切面 -->
        <aop:aspect ref="myAspect">
            <!-- 定义切入点 -->
            <aop:pointcut id="myPointcut" expression="execution(* me.yanrs.service.UserServiceImpl.*(..))"></aop:pointcut>

            <!-- 配置前置通知(在方法执行前进行 myBefore 中的操作) -->
            <aop:before method="myBefore" pointcut-ref="myPointcut"></aop:before>

            <!-- 配置后置通知(在方法执行后进行 myAfterReturning 中的操作), returnValue 是 myAfterReturning 的参数-->
            <aop:after-returning method="myAfterReturning" pointcut-ref="myPointcut" returning="returnValue"></aop:after-returning>

            <!-- 配置后置通知(在方法执行前后进行 myAround 中的操作)-->
            <aop:around method="myAround" pointcut-ref="myPointcut"></aop:around>

            <!-- 配置异常通知, e 是参数的名称，两边必须一致 -->
            <aop:after-throwing method="myAfterThrowing" pointcut-ref="myPointcut" throwing="e"></aop:after-throwing>

            <!-- 配置异常通知, e 是参数的名称，两边必须一致 -->
            <aop:after method="myAfter" pointcut-ref="myPointcut"></aop:after>

        </aop:aspect>
    </aop:config>
</beans>