<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:content="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 创建 dataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/web_ssh?characterEncoding=UTF-8"></property>
        <property name="user" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

    <!-- 创建 sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!-- 不整合 hibernate.cfg.xml 时候的写法 -->
        <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"></property> -->

        <!-- 整合 hibernate.cfg.xml 时候的写法 -->
        <!-- 1。 配置数据源 datasource -->
        <property name="dataSource" ref="dataSource"></property>

        <!-- 2。 配置 hibernate 其他配置 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql"> true </prop>
                <prop key="hibernate.format_sql"> true </prop>
                <prop key="hibernate.hbm2ddl.auto"> update </prop>
                <prop key="hibernate.dialect"> org.hibernate.dialect.MySQL5Dialect </prop>
            </props>
        </property>

        <!-- 3。 配置映射文件 -->
        <property name="mappingLocations" value="classpath:me/yanrs/model/*.hbm.xml"></property>
    </bean>

    <!-- 创建 hibernateTemplate -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 创建 dao -->
    <bean id="userDao" class="me.yanrs.dao.impl.UserDaoImpl">
        <property name="hibernateTemplate" ref="hibernateTemplate"></property>
    </bean>

    <!-- 创建 service -->
    <bean id="userService" class="me.yanrs.service.Impl.UserServiceImpl">
        <property name="iUserDao" ref="userDao"></property>
    </bean>

    <!-- 配置事务 -->

    <!-- 1. 配置事务管理器 -->
    <bean id="txManger" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 2. 配置通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManger">
        <tx:attributes>
            <tx:method name="register"/>
        </tx:attributes>
    </tx:advice>

    <!-- 3. 把通知应用到切入点 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* me.yanrs.service..*.*(..))"></aop:advisor>
    </aop:config>

</beans>